version: '3.8'

networks:
  NexiosNet:
    external: true
  internal:
    driver: overlay

services:
  nginx:
    image: nexiosdigital_frontend:latest  # Usar diretamente a imagem do frontend
    networks:
      - NexiosNet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nexiosdigital-frontend.rule=Host(`nexiosdigital.com`) || Host(`www.nexiosdigital.com`)"
        - "traefik.http.services.nexiosdigital-frontend.loadbalancer.server.port=80"
        - "traefik.http.routers.nexiosdigital-frontend.entrypoints=websecure"
        - "traefik.http.routers.nexiosdigital-frontend.tls.certresolver=letsencryptresolver"
        - "traefik.docker.network=NexiosNet"

  backend:
    image: nexiosdigital_backend:latest
    environment:
      - MONGODB_URL=mongodb://mongo:27017
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    networks:
      - internal
      - NexiosNet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nexiosdigital-backend.rule=Host(`nexiosdigital.com`) || Host(`www.nexiosdigital.com`) && PathPrefix(`/api`)"
        - "traefik.http.services.nexiosdigital-backend.loadbalancer.server.port=8000"
        - "traefik.http.routers.nexiosdigital-backend.entrypoints=websecure"
        - "traefik.http.routers.nexiosdigital-backend.tls.certresolver=letsencryptresolver"
        - "traefik.docker.network=NexiosNet"

  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - internal
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  mongo_data: